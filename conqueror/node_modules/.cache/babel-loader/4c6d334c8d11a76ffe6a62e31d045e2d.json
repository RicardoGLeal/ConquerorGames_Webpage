{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = collection => {\n  _s();\n\n  const [docs, setDocs] = useState([]); //se lanza cuando las dependencias cambian\n\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection).orderBy('createdAt', 'desc') //El order by puede ser como queramos en un futuro estría bien que fuera por likes\n    .onSnapshot(snap => {\n      let documents = [];\n      snap.forEach(doc => {\n        //los tres puntos importan toda la informacion del doc\n        documents.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setDocs(documents);\n    });\n    return () => unsub(); //unsub() permite que se un suscriba a la coleccion cuando ya no la usemos\n    //un callback cada que cambia la funcion el onsnapshot\n  }, [collection]);\n  return {\n    docs\n  };\n};\n\n_s(useFirestore, \"+T0lE56vJ9KU8atjOm2u+g1P1HQ=\");","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Documentos/GitHub/CONQUEROR_GAMES_WEBPAGE/conqueror/src/hooks/useFirestore.js"],"names":["useState","useEffect","projectFirestore","useFirestore","collection","docs","setDocs","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CADiC,CAGjC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,KAAK,GAAGL,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,EACbI,OADa,CACL,WADK,EACQ,MADR,EAEd;AAFc,KAGTC,UAHS,CAGGC,IAAD,IAAS;AACjB,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAG;AACf;AACAF,QAAAA,SAAS,CAACG,IAAV,CAAe,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;AAAgBC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAxB,SAAf;AACH,OAHD;AAIAV,MAAAA,OAAO,CAACK,SAAD,CAAP;AACP,KAVa,CAAd;AAWA,WAAM,MAAMJ,KAAK,EAAjB,CAZY,CAaZ;AACA;AACH,GAfQ,EAeN,CAACH,UAAD,CAfM,CAAT;AAiBA,SAAO;AAACC,IAAAA;AAAD,GAAP;AACH,CAtBD;;GAAMF,Y","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {projectFirestore} from '../firebase/config'\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    //se lanza cuando las dependencias cambian\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt', 'desc')\r\n        //El order by puede ser como queramos en un futuro estría bien que fuera por likes\r\n            .onSnapshot((snap) =>{\r\n                let documents = []\r\n                snap.forEach(doc =>{\r\n                    //los tres puntos importan toda la informacion del doc\r\n                    documents.push({...doc.data(), id: doc.id});\r\n                })\r\n                setDocs(documents)\r\n        });\r\n        return() => unsub();\r\n        //unsub() permite que se un suscriba a la coleccion cuando ya no la usemos\r\n        //un callback cada que cambia la funcion el onsnapshot\r\n    }, [collection])\r\n\r\n    return {docs};\r\n}"]},"metadata":{},"sourceType":"module"}