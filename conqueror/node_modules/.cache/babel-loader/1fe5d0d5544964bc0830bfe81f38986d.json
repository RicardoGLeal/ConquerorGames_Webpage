{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\CONQUEROR_GAMES_WEBPAGE\\\\conqueror\\\\src\\\\pages\\\\Contact.js\";\nimport React, { Component } from \"react\";\nimport \"../css/contact.css\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`\n              --SUBMITTING--\n              First Name: ${this.state.firstName}\n              Last Name: ${this.state.lastName}\n              Email: ${this.state.email}\n              Password: ${this.state.password}\n            `);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"firstName\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"FirstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: formErrors.firstName.length > 0 ? \"error\" : null,\n            placeholder: \"First Name\",\n            type: \"text\",\n            name: \"firstName\",\n            noValidate: true,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), formErrors.firstName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorMessage\",\n            children: formErrors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lastName\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: formErrors.lastName.length > 0 ? \"error\" : null,\n            placeholder: \"Last Name\",\n            type: \"text\",\n            name: \"lastName\",\n            noValidate: true,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), formErrors.lastName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorMessage\",\n            children: formErrors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: formErrors.email.length > 0 ? \"error\" : null,\n            placeholder: \"Email\",\n            type: \"email\",\n            name: \"email\",\n            noValidate: true,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), formErrors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorMessage\",\n            children: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createAccount\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Already Have an Account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["D:/GitHub/CONQUEROR_GAMES_WEBPAGE/conqueror/src/pages/Contact.js"],"names":["React","Component","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Contact","constructor","props","handleSubmit","e","preventDefault","state","console","log","firstName","lastName","email","password","error","handleChange","name","value","target","test","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/contact.css\"\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n  );\r\n  const formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: null,\r\n            lastName: null,\r\n            email: null,\r\n            formErrors: {\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n            }\r\n          };\r\n        }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (formValid(this.state)) {\r\n            console.log(`\r\n              --SUBMITTING--\r\n              First Name: ${this.state.firstName}\r\n              Last Name: ${this.state.lastName}\r\n              Email: ${this.state.email}\r\n              Password: ${this.state.password}\r\n            `);\r\n          } else {\r\n            console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n          }\r\n        };\r\n      \r\n        handleChange = e => {\r\n          e.preventDefault();\r\n          const { name, value } = e.target;\r\n          let formErrors = { ...this.state.formErrors };\r\n      \r\n          switch (name) {\r\n            case \"firstName\":\r\n              formErrors.firstName =\r\n                value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n              break;\r\n            case \"lastName\":\r\n              formErrors.lastName =\r\n                value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n              break;\r\n            case \"email\":\r\n              formErrors.email = emailRegex.test(value)\r\n                ? \"\"\r\n                : \"invalid email address\";\r\n              break;\r\n            case \"password\":\r\n              formErrors.password =\r\n                value.length < 6 ? \"minimum 6 characaters required\" : \"\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      \r\n          this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n        };\r\n\r\n    render () {\r\n        const {formErrors } = this.state;\r\n\r\n        return (\r\n            <div className='contact'>\r\n                <h1>Contact</h1>\r\n                <form onSubmit={this.handleSubmit}noValidate>\r\n                    <div className=\"firstName\">\r\n                        <label htmlFor=\"firstName\">FirstName</label>\r\n                        <input\r\n                            className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                            placeholder=\"First Name\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            noValidate\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.firstName.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"lastName\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input\r\n                            className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                            placeholder=\"Last Name\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            noValidate\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.lastName.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"email\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            className={formErrors.email.length > 0 ? \"error\" : null}\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            noValidate\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.email.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.email}</span>\r\n                        )}\r\n                        </div>\r\n                        <div className=\"createAccount\">\r\n                            <button type=\"submit\">Create Account</button>\r\n                            <small>Already Have an Account?</small>\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact"]},"metadata":{},"sourceType":"module"}