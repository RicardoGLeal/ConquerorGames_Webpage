{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\CONQUEROR_GAMES_WEBPAGE\\\\conqueror\\\\src\\\\pages\\\\Contact.js\";\nimport React, { Component } from \"react\";\nimport \"../css/contact.css\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`\n              --SUBMITTING--\n              First Name: ${this.state.firstName}\n              Last Name: ${this.state.lastName}\n              Email: ${this.state.email}\n              Message: ${this.state.message}\n            `);\n        const serviceId = 'service_n0fdjzj';\n        const templateId = 'template_4omxg4s';\n        this.sendFeedback(serviceId, templateId, {\n          message_html: this.state.message,\n          first_name: this.state.firstName,\n          last_name: this.state.lastName,\n          reply_to: this.state.email\n        });\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"Minimum 3 characters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"Minimum 3 characters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"message\":\n          formErrors.message = value.length < 1 ? \"Minimum 1 character required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      message: null,\n      sent: true,\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        message: \"\",\n        sent: false\n      }\n    };\n  }\n\n  sendFeedback(serviceId, templateId, variables) {\n    window.emailjs.send(serviceId, templateId, variables).then(res => {\n      console.log('Email successfully sent!');\n    }).catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: formErrors.sent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please, complete the following form and we will get in touch with you as soon as possible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"firstName\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: formErrors.firstName.length > 0 ? \"error\" : null,\n              placeholder: \"First Name\",\n              type: \"text\",\n              name: \"firstName\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), formErrors.firstName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lastName\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: formErrors.lastName.length > 0 ? \"error\" : null,\n              placeholder: \"Last Name\",\n              type: \"text\",\n              name: \"lastName\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), formErrors.lastName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: formErrors.email.length > 0 ? \"error\" : null,\n              placeholder: \"Email\",\n              type: \"email\",\n              name: \"email\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), formErrors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: formErrors.message.length > 0 ? \"error\" : null,\n              placeholder: \"Message\",\n              type: \"text\",\n              rows: \"8\",\n              name: \"message\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), formErrors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createAccount\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sorry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["D:/GitHub/CONQUEROR_GAMES_WEBPAGE/conqueror/src/pages/Contact.js"],"names":["React","Component","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Contact","constructor","props","handleSubmit","e","preventDefault","state","console","log","firstName","lastName","email","message","serviceId","templateId","sendFeedback","message_html","first_name","last_name","reply_to","error","handleChange","name","value","target","test","setState","sent","variables","window","emailjs","send","then","res","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/contact.css\"\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      message: null,\r\n      sent: true,\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        message: \"\",\r\n        sent : false,\r\n      }\r\n    };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n              --SUBMITTING--\r\n              First Name: ${this.state.firstName}\r\n              Last Name: ${this.state.lastName}\r\n              Email: ${this.state.email}\r\n              Message: ${this.state.message}\r\n            `);\r\n\r\n      const serviceId = 'service_n0fdjzj'\r\n      const templateId = 'template_4omxg4s';\r\n      this.sendFeedback(serviceId, templateId, { message_html: this.state.message, first_name: this.state.firstName, last_name: this.state.lastName, reply_to: this.state.email })\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  sendFeedback(serviceId, templateId, variables) {\r\n    window.emailjs.send(serviceId, templateId, variables)\r\n      .then(res => {\r\n        console.log('Email successfully sent!')\r\n      })\r\n      .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"Minimum 3 characters required\" : \"\";\r\n        break;\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 3 ? \"Minimum 3 characters required\" : \"\";\r\n        break;\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n      case \"message\":\r\n        formErrors.message =\r\n          value.length < 1 ? \"Minimum 1 character required\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n\r\n      <div className='wrapper'>\r\n        {formErrors.sent ? (\r\n          <div className=\"form-wrapper\">\r\n            <h1>Contact</h1>\r\n            <p>Please, complete the following form and we will get in touch with you as soon as possible.</p>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <div className=\"firstName\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                  className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                  placeholder=\"First Name\"\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  noValidate\r\n                  onChange={this.handleChange}\r\n                />\r\n                {formErrors.firstName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"lastName\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                  className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                  placeholder=\"Last Name\"\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  noValidate\r\n                  onChange={this.handleChange}\r\n                />\r\n                {formErrors.lastName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"email\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  className={formErrors.email.length > 0 ? \"error\" : null}\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  noValidate\r\n                  onChange={this.handleChange}\r\n                />\r\n                {formErrors.email.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.email}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"message\">\r\n                <label htmlFor=\"message\">Message</label>\r\n                <textarea\r\n                  className={formErrors.message.length > 0 ? \"error\" : null}\r\n                  placeholder=\"Message\"\r\n                  type=\"text\"\r\n                  rows=\"8\"\r\n                  name=\"message\"\r\n                  noValidate\r\n                  onChange={this.handleChange}\r\n                />\r\n                {formErrors.email.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.message}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"createAccount\">\r\n                <button type=\"submit\">Send</button>\r\n                {/* <small>Already Have an Account?</small> */}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        ) : (<p>Sorry</p>)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Contact"]},"metadata":{},"sourceType":"module"}